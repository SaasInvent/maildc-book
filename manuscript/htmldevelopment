#HTML development


With our Backbone.js setup, we are using html snippets as templates.

These code snippets are stored in our Backbone views which are either using the coffeescript or the javascript coloring syntax scheme.

In order to have the correct html coloring scheme we should develop our code snippets inside html files.

In order to achieve this we will place an "index.html" file in our 

 - /client

directory. This will respect all our relative paths.

The node.js http-server module is our choice of serving files. To install this module:

    npm install http-server -g

This will download any required dependencies and install http-server.

Now, from any directory, you can type:

    http-server [path] [options]

Path is optional, defaulting to ./public if it exists, otherwise ./.

Options are [defaults]:

    -p The port number to listen on [8080]
    -a The host address to bind to [localhost]
    -i Display directory index pages [True]
    -s or --silent Silent mode won't log to the console
    -h or --help Displays help message and exits

So to serve a file in the "assets" directory on port 8080, type:

    cd assets
    http-server ./assets -p 8080 -a 172.31.26.155

As you can see, you would launch http-server with the private IP from Amazon!

After creating a page "sandbox.html" in the "assets folder, you might charge the following page :

    http://your-domain-name:8080/sandbox.html

Here's the command embedded into gulp-shell:

    gulp.task('webserver', shell.task([
      'http-server ./assets -p 8080 -a 172.31.26.155'
    ]));

# Gulp

In order to watch our less/css modifications we launch a gulp "watch"task:

    gulp.task('watch', function () {
      gulp.watch('./assets/css/*.less', ['sandbox-less']);
    });

Here's the associated 'sandbox-less' task:

    gulp.task('sandbox-less', function () {  
        return gulp.src('./assets/css/workingbox.less')
        .pipe(plumber(function(error) {                                       
	        gutil.log(gutil.colors.red(error.message));
	        gutil.beep();
            this.emit('end');
                })) 
        .pipe(less()) // Compile LESS
       // .pipe(minifyCSS()) // Minify CSS
        .pipe(gulp.dest('./assets/sandbox/'));
       });

Gulp-plumber is very helpful to avoid that everything comes to a halt on error!
